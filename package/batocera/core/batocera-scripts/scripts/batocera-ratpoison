#!/usr/bin/env python
import os
import sys
import re
import time
import subprocess

def launchRatpoison():
	# Launch Xephyr to create display 1 in a window, then launch ratpoison in display 1
	subprocess.call('xephyr -br -ac -fullscreen -reset -terminate :1', shell=True)
	subprocess.call('LC_ALL=C DISPLAY=:1 ratpoison')

def killRatpoison():
	runRatpoisonCommand('quit')

def killXephyr():
	# Xephyr should end when Ratpoison exits, this is a backup..
    try:
        for line in os.popen('ps ax | grep "xephyr" | grep -v grep'):
            fields = line.split()

            # extracting Process ID from the output
            pid = fields[0]

            # terminating process
            os.kill(int(pid), signal.SIGKILL)
        print("Ended Xephyr")

    except:
        print("Could not end Xephyr")

def altTab():
	runRatpoisonCommand('next')
	showMessage(getRatpoisonCommand('windows %s %n:%t (%a)'))

def showMessage(message):
	runRatpoisonCommand(f'echo {message}')

def runRatpoisonCommand(command):
	print(f'Running ratpoison command {command}')
	try:
		subprocess.call(f'LC_ALL=C ratpoison -d :1 -c "{command}"', shell=True)
	except:
		print('Command returned an error.')
		return False

def getRatpoisonCommand(command):
	print(f'Running ratpoison command {command} (Expecting output)')
	try:
		tempVar = subprocess.check_output(f'LC_ALL=C ratpoison -d :1 -c "{command}"', shell=True).decode(sys.stdout.encoding)
	except:
		return False
	print(f'Ratpoison Output = {tempVar}')
	return tempVar.strip()

if __name__ == '__main__':
	if len(sys.argv) == 1:
		print('Error, command needed.')
	elif sys.argv[1] == 'launch':
		launchRatpoison()
	elif sys.argv[1] == 'reset':
		killRatpoison()
		killXephyr()
	elif sys.argv[1] == 'switchapp':
		altTab()
	elif sys.argv[1] == 'message':
		showMessage(sys.argv[2])